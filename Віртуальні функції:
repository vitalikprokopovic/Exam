#include <iostream>
#include <cmath>

using namespace std;


class Shape {
public:
    virtual double area() const = 0; 
    virtual ~Shape() {} 
};


class Triangle : public Shape {
private:
    double base;
    double height;

public:
    Triangle(double b, double h) : base(b), height(h) {}

    
    double area() const override {
        return 0.5 * base * height;
    }
};


class Square : public Shape {
private:
    double side;

public:
    Square(double s) : side(s) {}

    
    double area() const override {
        return side * side;
    }
};


class Circle : public Shape {
private:
    double radius;
    const double pi = 3.14159;

public:
    Circle(double r) : radius(r) {}


    double area() const override {
        return pi * radius * radius;
    }
};

int main() {

    Triangle triangle(3.0, 4.0);
    Square square(5.0);
    Circle circle(2.5);

    
    cout << "Area of Triangle: " << triangle.area() << endl;
    cout << "Area of Square: " << square.area() << endl;
    cout << "Area of Circle: " << circle.area() << endl;

    return 0;
}
